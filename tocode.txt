clan
public TextObject FullName
	{
		get
		{
			TextObject textObject = TextObject.Empty;
			int minClanTier = Campaign.Current.Models.ClanTierModel.MinClanTier;
			if (minClanTier >= this.Tier)
			{
				textObject = new TextObject("{=aZne44IB}{CLAN_NAME} Family", null);
			}
			else if (minClanTier + 1 == this.Tier)
			{
				textObject = new TextObject("{=ztXDDMSI}{CLAN_NAME} Clan", null);
			}
			else if (minClanTier + 2 == this.Tier)
			{
				textObject = new TextObject("{=UnjmmLFm}{CLAN_NAME} Noble Clan", null);
			}
			else
			{
				textObject = new TextObject("{=iOrtiVLt}House of {CLAN_NAME}", null);
			}
			textObject.SetTextVariable("CLAN_NAME", this.Name);
			return textObject;
		}
	}

public override int GetRelationChangeForExecutingHero(Hero victim, Hero hero, out bool showQuickNotification)
	{
		int result = 0;
		showQuickNotification = false;
		if (victim.GetTraitLevel(DefaultTraits.Honor) < 0)
		{
			if (!hero.IsHumanPlayerCharacter && hero != victim && hero.Clan != null && hero.Clan.Leader == hero)
			{
				if (hero.Clan == victim.Clan)
				{
					result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroClanRelationPenaltyDishonorable;
					showQuickNotification = true;
				}
				else if (victim.IsFriend(hero))
				{
					result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroFriendRelationPenaltyDishonorable;
					showQuickNotification = true;
				}
				else if (hero.MapFaction == victim.MapFaction && hero.CharacterObject.Occupation == Occupation.Lord)
				{
					result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroFactionRelationPenaltyDishonorable;
					showQuickNotification = true;
				}
			}
		}
		else if (!hero.IsHumanPlayerCharacter && hero != victim && hero.Clan != null && hero.Clan.Leader == hero)
		{
			if (hero.Clan == victim.Clan)
			{
				result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroClanRelationPenalty;
				showQuickNotification = true;
			}
			else if (victim.IsFriend(hero))
			{
				result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroFriendRelationPenalty;
				showQuickNotification = true;
			}
			else if (hero.MapFaction == victim.MapFaction && hero.CharacterObject.Occupation == Occupation.Lord)
			{
				result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroFactionRelationPenalty;
				showQuickNotification = false;
			}
			else if (hero.GetTraitLevel(DefaultTraits.Honor) > 0 && !victim.Clan.IsRebelClan)
			{
				result = Campaign.Current.Models.ExecutionRelationModel.PlayerExecutingHeroHonorableNobleRelationPenalty;
				showQuickNotification = true;
			}
		}
		return result;
	}
		
		
public void OnAIPartiesTravel(Hero hero, bool isCaravanParty, TerrainType currentTerrainType)
	{
		int num = (currentTerrainType == TerrainType.Forest) ? MBRandom.RoundRandomized(5f) : MBRandom.RoundRandomized(3f);
		hero.AddSkillXp(DefaultSkills.Scouting, isCaravanParty ? ((float)num / 2f) : ((float)num));
	}

		
// Token: 0x06002F73 RID: 12147 RVA: 0x000C9B08 File Offset: 0x000C7D08
public void OnMainHeroTortured()
	{
		float skillXp = MBRandom.RandomFloatRanged(50f, 100f);
		DefaultSkillLevelingManager.OnPersonalSkillExercised(Hero.MainHero, DefaultSkills.Roguery, skillXp, true);
	}

		